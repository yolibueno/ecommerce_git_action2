# .github/workflows/main.yml

name: Deploy with SonarQube and Docker

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  DOCKER_PROJECT_NAME: 'ecomapp'
  APP_CONTAINER_NAME: 'product_app'
  SONAR_HOST_URL: 'http://localhost:9000'
  SONAR_PROJECT_KEY: 'examen'

jobs:
  build-and-analyze:
    name: Build, Analyze and Deploy
    runs-on: self-hosted

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: üß± Build with Maven (tests skipped)
        run: mvn -B clean verify -DskipTests

      - name: üîç SonarQube Analysis
        run: mvn sonar:sonar \
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
          -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: üê≥ Deploy with Docker Compose
        run: |
          echo "‚úÖ Iniciando despliegue local..."
          cd docker
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} down -v --remove-orphans || echo "‚ö†Ô∏è No se encontr√≥ un despliegue anterior."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} up -d --build
          echo "‚úÖ Contenedores levantados"
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} ps
