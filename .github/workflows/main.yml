name: CI/CD with SonarQube and Docker

on:
  push:
    branches: [ "main" ]  # Cambia a "master" si es tu rama principal
  workflow_dispatch:

env:
  SONAR_PROJECT_KEY: micro-product
  SONAR_HOST_URL: http://localhost:9000  # Cambia si usas Sonar en otro host
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  DOCKER_IMAGE_NAME: yolibueno/micro-product
  DOCKER_TAG: latest

jobs:
  build-sonar-docker:
    runs-on: self-hosted

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: üìä Analyze with SonarQube
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.login=${{ env.SONAR_TOKEN }}

      - name: üõ†Ô∏è Build JAR
        run: mvn package -DskipTests

      - name: üê≥ Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }} -f docker/Dockerfile .

      - name: üì§ Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
